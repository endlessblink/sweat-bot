{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///mnt/d/MY%20PROJECTS/AI/LLM/AI%20Code%20Gen/my-builds/Automation-Bots/sweatbot/personal-ui/app/api/personal-sweatbot/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    console.log('🔄 Deep Chat API Request:', body);\n\n    // Deep Chat sends messages in different formats, handle both\n    let message: string;\n    let history: any[] = [];\n\n    if (body.messages && Array.isArray(body.messages)) {\n      // Deep Chat format: { messages: [...] }\n      const lastMessage = body.messages[body.messages.length - 1];\n      message = lastMessage?.text || lastMessage?.content || '';\n      history = body.messages.slice(0, -1); // All messages except the last one\n    } else {\n      // Legacy format: { message: \"...\", history: [...] }\n      message = body.message || body.text || '';\n      history = body.history || [];\n    }\n\n    if (!message.trim()) {\n      throw new Error('No message content provided');\n    }\n\n    console.log('📝 Processing message:', message);\n    console.log('📚 History length:', history.length);\n\n    // Call Python personal SweatBot backend\n    const pythonBackendUrl = process.env.PYTHON_BACKEND_URL || 'http://localhost:8765';\n    \n    const backendResponse = await fetch(`${pythonBackendUrl}/api/personal-chat`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        message,\n        history: history || []\n      }),\n    });\n\n    if (!backendResponse.ok) {\n      throw new Error(`Backend responded with status: ${backendResponse.status}`);\n    }\n\n    const data = await backendResponse.json();\n    const responseText = data.response || 'תגובה לא זמינה';\n\n    console.log('✅ Backend response:', responseText.substring(0, 100) + '...');\n\n    // Return in Deep Chat expected format\n    return NextResponse.json({\n      // Deep Chat expects 'text' field\n      text: responseText,\n      role: 'ai',\n      // Legacy compatibility\n      response: responseText,\n      success: true,\n      // Additional metadata for Deep Chat\n      html: responseText.replace(/\\n/g, '<br>'), // Convert newlines to HTML\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('❌ Personal SweatBot API error:', error);\n    \n    const errorMessage = 'מצטער, יש בעיה בחיבור לשרת. אנא בדוק שהשרת הפייתון רץ על פורט 8765.';\n    \n    return NextResponse.json({\n      text: errorMessage,\n      role: 'ai',\n      response: errorMessage,\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date().toISOString()\n    }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,QAAQ,GAAG,CAAC,6BAA6B;QAEzC,6DAA6D;QAC7D,IAAI;QACJ,IAAI,UAAiB,EAAE;QAEvB,IAAI,KAAK,QAAQ,IAAI,MAAM,OAAO,CAAC,KAAK,QAAQ,GAAG;YACjD,wCAAwC;YACxC,MAAM,cAAc,KAAK,QAAQ,CAAC,KAAK,QAAQ,CAAC,MAAM,GAAG,EAAE;YAC3D,UAAU,aAAa,QAAQ,aAAa,WAAW;YACvD,UAAU,KAAK,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,mCAAmC;QAC3E,OAAO;YACL,oDAAoD;YACpD,UAAU,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI;YACvC,UAAU,KAAK,OAAO,IAAI,EAAE;QAC9B;QAEA,IAAI,CAAC,QAAQ,IAAI,IAAI;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC,0BAA0B;QACtC,QAAQ,GAAG,CAAC,sBAAsB,QAAQ,MAAM;QAEhD,wCAAwC;QACxC,MAAM,mBAAmB,QAAQ,GAAG,CAAC,kBAAkB,IAAI;QAE3D,MAAM,kBAAkB,MAAM,MAAM,GAAG,iBAAiB,kBAAkB,CAAC,EAAE;YAC3E,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA,SAAS,WAAW,EAAE;YACxB;QACF;QAEA,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACvB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,gBAAgB,MAAM,EAAE;QAC5E;QAEA,MAAM,OAAO,MAAM,gBAAgB,IAAI;QACvC,MAAM,eAAe,KAAK,QAAQ,IAAI;QAEtC,QAAQ,GAAG,CAAC,uBAAuB,aAAa,SAAS,CAAC,GAAG,OAAO;QAEpE,sCAAsC;QACtC,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,iCAAiC;YACjC,MAAM;YACN,MAAM;YACN,uBAAuB;YACvB,UAAU;YACV,SAAS;YACT,oCAAoC;YACpC,MAAM,aAAa,OAAO,CAAC,OAAO;YAClC,WAAW,IAAI,OAAO,WAAW;QACnC;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAEhD,MAAM,eAAe;QAErB,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,MAAM;YACN,MAAM;YACN,UAAU;YACV,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,WAAW,IAAI,OAAO,WAAW;QACnC,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}